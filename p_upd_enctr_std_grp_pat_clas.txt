REPLACE PROCEDURE D_ERM_MAC.P_UPD_ENCTR_STD_GRP_PAT_CLAS(
    IN in_name_space_cd	VARCHAR(200),
    IN in_run_type		VARCHAR(1),
    IN in_start_dt DATE,
    OUT out_return_msg 	VARCHAR(4000)
    ) SQL SECURITY OWNER
BEGIN
   /* p_upd_enctr_std_grp_pat_clas
    * Desc: 		This proc will load ENCTR_STD_GRP_HIST / std_grp_volatile for
    * 				Standard Grouping- Patient Classification.
    * 				Complete Delete and Load (ERM is rebuildable from ODS)
    * 				All Date-Effectivity will be Month-End and Current Date-1
    *
    * Parameters:	in_name_space_cd: The name_space_cd associated with this job
    *				in_run_type: 'I' for incremental (Daily) or 'H' for a full historic load
    *
    * Usage:		call D_ERM_MAC.p_upd_enctr_std_grp_pat_clas('EPIC-SYRACUSE', 'H', NULL, 'xx');
    * 				call D_ERM_MAC.p_upd_enctr_std_grp_pat_clas('EPIC-CHICAGO', 'I','2017-05-22', 'xx');
    * Version:		0.5.7
    *
    * TODO:
    * 		- Get rid of SQLSTATE '42000' dangerous.
    *       - is error propogation working fine?
    *
    * Change Log:
    *
    *  Date 			Who				What
    * 12/16/2016		Kumar, Alok		Init
    * 09/16/2017       	pat     		Fixed l_JOB_ID warning. Repointed "p_idw_ACCV" to "D_SHR_ACCV"
    * 05/08/2018		Kumar, Alok		Added the logic for the run type as 'S'
    * 05/17/2018		Kumar, Alok		Updated the Service Line DRG logic to check the DRG Code into TERM_MAP then TERM_MAP_GROUP tables.
    * 05/18/2018       	pat             Modified Exception handling, modified logging only 1 rec instead of 1 for START and 1 for END. changed "in_last_completion_dt to in_start_dt &
    * 									l_last_completion_dt to l_start_dt" and changed "out_return_msg" to OUT only.
    * 06/07/2018		Kumar, Alok		Updated the :l_start_dt - 1 so it will re-process only 1 day prior to current date.
    * 07/09/2018		Kumar, Alok		Removed -1 from :l_start_dt - 1 because we do not want to re-process yesterday's data.
    * 07/03/2018		Kumar, Alok		Our Lady of Peace (IN212) is REC_AUTH=69 - All the encounters will be grouped as 'Exclude From Reports'.
    * 07/03/2018		Kumar, Alok		Additional logic for Emergency patients - PatientTypeGroup <> 'URGENT CARE'.
    * 07/03/2018		Kumar, Alok		Added Inpatient Joint Venture which is applicable for Anne Arbor only.
    * 07/03/2018		Kumar, Alok		Added 'Inpatient Long Term Care', 'Inpatient Respite and Trans', 'Inpatient Acute Head Pain'.
    *									These are applicable for Health Quest, Meditech and Meditech Magic sites only.
    * 07/03/2018		Kumar, Alok		Added logic for Rehab where ChargeDepartmentGroup = 'INPATIENT REHAB'.
    * 08/28/2018		Kumar, Alok		Removed -1 from :l_start_dt - 1 because we do not want to re-process yesterday's data.
    * 08/29/2018		Kumar, Alok		Updated calendar_date with - 1 for the new_eff_from_dt because it should be yesterday's date.
    * 09/06/2018		Kumar, Alok		Updated calendar_date logic by removing -1 from the select and using >= for the last run check.
    * 09/07/2018		Kumar, Alok		Added logic to get Exclude From Reports from TERM tables.
    * 09/19/2018		Kumar, Alok     Added Charge Code Group as ER VISIT for RSW becasuse that is from Legacy system.
    * 09/27/2018		Kumar, Alok     updated to logic for Outpatient/Inpatient Without Charges with an AND condition for Charge Quantity.
										Also, Updated the logic to include 'INPATIENT ACUTE' for Inpatient Normal Newborn Grouping.
    * 10/11/2018		Kumar, Alok		Added Patient Type Group as NEWBORN in the IN list of Inpatient Acute.
    * 10/26/2018		Kumar, Alok		Added effective date logic for term_map_grp table.
    * 10/26/2018		Kumar, Alok		Added logic for Non Patient cases using Patient Type Group.
    * 01/16/2019	  	Kumar, Alok		Moved Inpatient Without Charges after Inpatient Normal Newborn in the hierarchy.
    * 01/16/2019	  	Kumar, Alok		Removed Term2 from the main block of SQL.
    * 02/06/2019	  	Kumar, Alok		Added logic for ORG_LVL_3_CD with Nonpatient.
    * 02/14/2019		Kumar, Alok		Updated the logic for Non patient for MC0CONS for the ptient_type_cd is SN.
    * 02/20/2019		Kumar, Alok		Added the logic for Healthquest for the charge department 4300 which is grouped to OUTPATIENT BEHAVIORAL MEDICINE.
    * 02/21/2019		Kumar, Alok		Updated the Exclude From Reports logic for Test Patients.
    * 02/21/2019	 	Kumar, Alok		Added logic with ORG_LVL_3_CD for Exclude From Report.
    * 02/21/2019		Kumar, Alok		Rolledback the changes for the Exclude From Reports logic for Test Patients.
    * 02/26/2019		Kumar, Alok		Updated Exclude from reports logic with additional filter as fmly_name like 'HNAM%'.
    * 02/26/2019		Kumar, Alok		Moved Series prior to Emergency in the Hierarchy.
    * 02/26/2019		Kumar, Alok		Updated the logic for Rehab and Behavioral Health where patient type group moved in the higher priority than the charge dept group.
    * 03/05/2019		Kumar, Alok		Updated the filter in the Exclude From Reports for Test Account.
    * 03/14/2019		Kumar, Alok		Updated Inpatient Behavioral Medicine with additional logic for MC0CONS.
    * 03/14/2019		Kumar, Alok		Removed the logic for Org Level 3 from Exclude From Reports.
    * 03/18/2019		Kumar, Alok		Updated Inpatient Behavioral Medicine by adding the new logic using Revenue Location. Also removed the hardcoding for MC0CONS.
    * 03/21/2019		Kumar, Alok		Updated the logic for Behavioral Medicine by additing addition coditon with Inpatient Acute and Revenue Location - 5E.
    * 03/26/2019       	PAT             Modify Exclude from reports logic filter for RSW sites.
    * 03/26/2019       	PAT             Added VITAS insurance code to non-patient cases. As per conv with jana, agreed to hard-code from enctr_hist.
    * 06/13/2019       	PAT             Added "NEONATE WITH MAJOR PROBLEMS" to "Inpatient Normal Newborn" patient class.
    * 07/08/2019       	PAT			    As part of ENCTR's (RSW) that have multiple ENCTR_ID's based on REC_AUTH's change, identified that "p_idw_ACCV.ENCTR" is not needed as there isn't any column(s)
    * 									refrence from that table.
    * 07/17/2019       	PAT             Removed "NEONATE WITH MAJOR PROBLEMS" from "Inpatient Normal Newborn" patient class. This might impact EPIC sites and  business is fine with it.
    * 11/21/2091       	PAT             Added STATS to VT to improve SRVC_LVL_3 performance.
    * 01/03/2020       	PAT             Emergency Patient Classification should look for Charge Code AND Charge Department to match oracle logic.
    * 									Even though this change was included in RSW ERM build file directly, never made to GIT.
    * 01/16/2020		VD				Updated TERM 29 to include 999 with New Borns.
    * 01/20/2020		VD				Added Legcay Conversion pat class logic.
    * 02/06/2020		VD			 	change logic in legacy conversion to remove dispo code and inpatient filter.
    * 02/23/2020		VD				Changed the l_hist_run_Dt value.
    * 04/09/2020		VD				Added logic for COVID 19 and changed the l_hist_run_dt to 2019-07-01.
    * 04/22/2020       	PAT             COVID - OP pat_clas logic in sync with srvc_lvl_3 logic. Changed the l_hist_run_dt to 2019-06-01.
    * 04/23/2020       	PAT             COVID- handle cases that were coded and have 1111-11-11 DSCHG_DT.
    * 04/28/2020       	PAT 			COVID - Differentiate between COVID Test (OP) & Actual COVID patients.
    * 05/01/2020       	PAT             Revert 04/28/2020 change, not needed for pat_clas.
    * 05/07/2020       	PAT             Changed the l_hist_run_dt to 2019-04-01.
    * 05/13/2020       	PAT             Change for MacNeal Hospice Patients, these patients need to be assigned 'Non-Patient' UEM Patient Class.
    * 									The logic needs to look at the conformed code of 'HI'.  Using the term_grp of 'INPATIENT ACUTE' will make all inpatients at MacNeal as non-patient.
    * 07/26/2020       	PAT             Removed admitting diagn for COVID.
    * 07/29/2020       	PAT             Removed "covid_chrg_cnt" from COVID as there are still some charges mapped in QA/PROD causing variance.
    * 12/01/2020       	PAT             Removed/re-pointed l_hist_run_dt to in_start_dt.Updated "H" start date to "2020-01-01" (OLD "H" refresh loads >=2019-04-01).
    * 02/25/2021       	AGD             Modified to use TERM_MAP_FLTN and TERM_MAP_GRP_FTLN tables.
    * 04/08/2021		VD				Added condition for active indicater in Exclude From Reports section, and updated the hardcoded EXCLDE to EXCLUDE
    * 03/07/2022       	PAT 			Just get the data that is needed for a given incremental run for CHRGs. Fix INC06448481, spool issues.
    * 03/09/2022		VD				Moved Nonpatient Cases higher in hierarchy than COVID Patient
    * 04/20/2022		VD				Moved O/P Without Charges higher in hierarchy than Nonpatient Cases
    * 04/25/2022		VD				Modified to include SURG_FLG & ER_FLG
    * 05/25/2022		Anne			Modified history logic to avoid spool space errors. Included logic for Start Date run type.
    * 									Removed join to ENCTR_PRVDR and PRTY in the TERM1 query since they are not used. Removed commented out TERM/TERM_GRP joins.
    * 									Changed from ACCV to IBV.
    * 									Split CHRG_DTL into 3 queries:
    * 										1. chrgs joined to term tables with the rule values in the WHERE clause
    *										2. simple query just for sum(chrg_qty) w/o term joins
    *										3. diagn covid
    * 05/18/2023		Anne			Moved logic to populate INPTN_COVID_FLG from the LVL3 procedure to here since SG2 service lines are replacing the
    * 									STD_SRVC_LVL_1-3 values.
    * 06/28/2023		VD				Commented "Outpatient COVID 19" clause
	* 11/08/2023		Anne			Renamed LD_%_DT_TM to LOAD_%_DT_TM. Modified 'Exclude From Reports' logic to not include 'EPIC_TC' in the filter
	*                                   for specific test names (needed for Legacy Epic sites) since TC is covered by the ACTV_IND = 'N' logic.
	* 04/22/2025		VD				Added EXTR_AR_FLG=Y condition for Health Bridge to the 'Exclude From Reports' group
    *
    */

        DECLARE l_LD_ADD_DT_TM, l_LD_MOD_DT_TM TIMESTAMP DEFAULT CURRENT_DATE;
        DECLARE l_start_dt, l_hist_run_dt 	DATE;
        DECLARE not_found, l_activity_count NUMBER  DEFAULT 0;
        DECLARE l_warn_msg 					VARCHAR(255);
        DECLARE l_PRCS_NAME                	VARCHAR(55) DEFAULT 'Standard Grouping Load';
        DECLARE l_SCRIPT_NAME              	VARCHAR(55) DEFAULT 'p_upd_enctr_std_grp_pat_clas';
        DECLARE l_STAT_CD                  	VARCHAR(55) DEFAULT 'R';
        DECLARE l_BUS_UNIT					VARCHAR(55) DEFAULT 'ALL';
        DECLARE l_JOB_ID,l_JOB_DTL_ID		NUMBER DEFAULT NULL;
        DECLARE l_JOB_REF_ID,l_RUN_ERROR_CD NUMBER DEFAULT 0;
        DECLARE l_RUN_ERROR_MSG            	VARCHAR(2000);

        DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET not_found = 1;
        DECLARE CONTINUE HANDLER FOR SQLWARNING SET l_warn_msg = 'WARN '||SQLCODE;
        DECLARE EXIT HANDLER FOR SQLEXCEPTION
        BEGIN
            SET l_RUN_ERROR_CD = SQLCODE;
            GET DIAGNOSTICS EXCEPTION 1 l_RUN_ERROR_MSG = MESSAGE_TEXT;
            CALL D_ERM_MAC.P_ERM_JOB_HISTORY(:l_JOB_ID, :l_PRCS_NAME, :l_BUS_UNIT, :l_SCRIPT_NAME, 'E', 0, 0, 0, :l_RUN_ERROR_CD, :l_SCRIPT_NAME||' failed with error '||:l_RUN_ERROR_MSG,  :l_JOB_ID);
            RESIGNAL SET MESSAGE_TEXT  =  l_RUN_ERROR_MSG; -- will see only 128 characters in TDE (limitation).

        END;

        SET l_BUS_UNIT = in_name_space_cd;
                --set l_hist_run_dt =  to_date('2013-01-01','yyyy-mm-dd');
                --set l_hist_run_dt =  to_date('2019-04-01','yyyy-mm-dd'); -- Updated 2/23/2020. commented this as the H param gets passed from p_up_enctr_std_grp_hist.
        SET l_start_dt = in_start_dt;

        CALL D_ERM_MAC.P_ERM_JOB_HISTORY(:l_JOB_ID, :l_PRCS_NAME, :l_BUS_UNIT, :l_SCRIPT_NAME, :l_STAT_CD, 0, 0, 0, :l_RUN_ERROR_CD, :l_RUN_ERROR_MSG,  :l_JOB_ID);

                	-- job detail start std_grp_volatile
        CALL D_ERM_MAC.P_ERM_JOB_HISTORY_DTL(:l_JOB_ID, NULL, 0,
        'Start of Insert into  std_grp_volatile for Patient Classification  in_run_type: '||:in_run_type||' ;name_space_cd:'||:in_name_space_cd||' ;l_start_dt'||
        CASE
            WHEN :l_start_dt IS NULL THEN ' NO DATE ' ELSE CAST((:l_start_dt (FORMAT 'yyyy-mm-dd')) AS VARCHAR(10) )
        END, l_JOB_DTL_ID);


          	/* PATIENT CLASSIFICATION
          	 * ----------------------
          	 * Now inserting records into std_grp_volatile table (defined in calling procedure, p_upd_enctr_std_grp_hist)
          	 * Records will be first inserted into Staging table followed by main table.
          	 * */

        INSERT INTO std_grp_volatile(
        ENCTR_ID,
        EFF_FROM_DT,
        REC_AUTH,
        NAME_SPACE_CD, SURG_FLG, ER_FLG,
        JOB_ID,
        LOAD_ADD_DT_TM,
        LOAD_MOD_DT_TM,
        EFF_THRU_DT,
        STD_PTIENT_CLAS,
        INPTN_COVID_FLG
        )
        WITH MAIN AS (
        SELECT enctr_hist.enctr_id,
            me_dt.new_eff_from_dt eff_from_dt,
            DATE'2041-01-01' eff_thru_dt,
             --<<<< this is set later AFTER you know what record exists for the enctr!!!!
            enctr_hist.REC_AUTH,
            enctr_hist.NAME_SPACE_CD,
            case when coalesce (TERM_ALL.surg_flg,0) > 0 then 'Y' else 'N' end surg_flg ,
            case when coalesce (TERM_ALL.er_flg,0) > 0 then 'Y' else 'N' end er_flg ,

            CASE
                WHEN TERM1.term1_cnt > 0 THEN TERM1.v_grp_cd_1
                WHEN TERM2.term2_cnt > 0 THEN TERM2.v_grp_cd_2
                WHEN TERM_ALL.term_all_cnt > 0 THEN TERM_ALL.v_grp_cd_all
            ELSE 'Undefined Others'
            END v_grp_cd,
            TERM_ALL.inptn_covid_flg  --- added 5/18/23

            FROM D_ERM_IBV.ENCTR_HIST enctr_hist
            JOIN me_dt ON (me_dt.new_eff_from_dt BETWEEN enctr_hist.eff_from_dt AND enctr_hist.eff_thru_dt )
            AND (EXISTS ( SELECT 1
                          FROM prcs_ctrl
                          WHERE prcs_ctrl.enctr_id = enctr_hist.enctr_id
                          AND  prcs_ctrl.name_space_cd = enctr_hist.name_space_cd)
                 /*OR 'H' = :in_run_type*/)   -- moved to PRCS_CTRL
            LEFT OUTER JOIN term1    ON (enctr_hist.enctr_id = term1.enctr_id    AND enctr_hist.name_space_cd = term1.name_space_cd    AND term1.eff_from_dt = me_dt.new_eff_from_dt   )
            LEFT OUTER JOIN term2    ON (enctr_hist.enctr_id = term2.enctr_id    AND enctr_hist.name_space_cd = term2.name_space_cd    AND term2.eff_from_dt = me_dt.new_eff_from_dt   )
            LEFT OUTER JOIN term_all ON (enctr_hist.enctr_id = term_all.enctr_id AND enctr_hist.name_space_cd = term_all.name_space_cd AND term_all.eff_from_dt = me_dt.new_eff_from_dt)
            WHERE enctr_hist.name_space_cd = :in_name_space_cd
        ),
                	/* 	From Term5 through Term55
                	 *  PATIENT CLASS TERM = 'N' Will be Patient Class, patient class 1, patient class 2
                	 *  Patient Class derived from 1(base class) and 2(guarantor type)
                	 */
        TERM_ALL AS
        (
        SELECT
            eh.enctr_id,
            eh.name_space_cd,
            me_dt.new_eff_from_dt eff_from_dt,
            COUNT(*) term_all_cnt,
			sum(CHRG_DTL.SurgeryCharge_cnt) surg_flg,
	    	sum(CHRG_DTL.EmergencyCharge_cnt) er_flg,
	    	CASE WHEN (  st.term_cd = 'I' AND ( ( DIAGS.covid_icd_cnt > 0 )  OR  ( DIAGS.final_icd_cnt = 0 AND (CHRG_DTL.covid_hcpcs_cnt > 0 /*OR covid_chrg_cnt >0 */
                         OR tgpc.tgt_term_cd = 'COVID 19' OR tgsc.tgt_term_cd = 'COVID 19' OR tgtc.tgt_term_cd = 'COVID 19' OR tgfc.tgt_term_cd = 'COVID 19' )) )
                      ) then 'Y' ELSE 'N' END AS INPTN_COVID_FLG,   -- added 5/18/23
            CASE
               WHEN (st.term_cd <> 'I' AND COALESCE(agg.tot_chrg,0) = 0 AND COALESCE(CHRG_DTL2.chrg_qty_cnt,0) = 0 ) THEN 'Outpatient Without Charges'  -- chgd to CHRG_DTL2 5/25/22
               WHEN (st.term_cd = 'N' OR tt3.tgt_term_cd = 'NONPATIENT' OR tt5.tgt_term_cd = 'NONPATIENT'  OR UPPER (eh.PRMRY_INSRNC_CD) LIKE 'VITA%'
            OR (tt3.tgt_term_cd = 'SKILLED NURSING' AND eh.name_space_cd = 'HEALTHQUEST MC0CONS' AND eh.DSCHG_DT > DATE'2015-09-30' )
            OR (strtok(tm3.tgt_term_key,'|',1) = 'HI' AND eh.ORG_LVL_1_CD LIKE '750|%' /*MacNeal Hospice Patients*/ ) ) 					THEN 'Nonpatient Cases'

              --  WHEN (  st.term_cd <> 'I' AND ( ( DIAGS.covid_icd_cnt > 0 )  OR  ( DIAGS.final_icd_cnt = 0 AND (CHRG_DTL.covid_hcpcs_cnt > 0 /*OR covid_chrg_cnt >0 */
            --OR tgpc.tgt_term_cd = 'COVID 19' OR tgsc.tgt_term_cd = 'COVID 19' OR tgtc.tgt_term_cd = 'COVID 19' OR tgfc.tgt_term_cd = 'COVID 19' )) )
          --  ) 																																THEN 'Outpatient COVID 19' -- covid 19
               --TERM-5

                WHEN st.term_cd <> 'I' AND (SurgeryCharge_cnt > 0 AND COALESCE(tt4.tgt_term_cd, ' ') <> 'DELIVERY')									THEN 'Outpatient Surgery' --TERM-12

                WHEN st.term_cd <> 'I' AND (tt3.tgt_term_cd = 'SERIES') 																				THEN 'Outpatient Series' --TERM-24,27

                WHEN st.term_cd <> 'I' AND (EmergencyCharge_cnt > 0 OR tt3.tgt_term_cd = 'EMERGENCY')
            AND COALESCE(tt3.tgt_term_cd, ' ') <> 'URGENT CARE' 													THEN 'Outpatient Emergency Services' --TERM-17,20

                WHEN st.term_cd <> 'I' 																												THEN 'Outpatient Other' --TERM-28

                WHEN st.term_cd =  'I' AND ((tt3.tgt_term_cd IN ('NEWBORN','INPATIENT ACUTE')
            AND tt4.tgt_term_cd IN ( 'NORMAL NEWBORN' ) )
            OR (tt3.tgt_term_cd IN ('NEWBORN')
            AND tt4.tgt_term_cd IN ( 'UNCODED' ) ) )															THEN 'Inpatient Normal Newborn' --term-29 -- 01/16/2019 Added OR condition

                WHEN (st.term_cd = 'I'  AND COALESCE(agg.tot_chrg,0) = 0 AND COALESCE(CHRG_DTL2.chrg_qty_cnt,0) = 0 AND ed.dschrg_dt_tm IS NOT NULL )	THEN 'Inpatient Without Charges' --New Grouping.

                WHEN st.term_cd =  'I' AND (tt3.tgt_term_cd = 'JOINT VENTURE') 																		THEN 'Inpatient Joint Venture' --Only for Anne Arbor.

                WHEN st.term_cd =  'I' AND (tt3.tgt_term_cd = 'LONG TERM CARE') 																		THEN 'Inpatient Long Term Care' --Only for HQ, Meditech and Meditech Magic.

                WHEN st.term_cd =  'I' AND (tt3.tgt_term_cd = 'RESPITE AND TRANSITION CARE') 															THEN 'Inpatient Respite and Trans' --Only for HQ, Meditech and Meditech Magic.

                WHEN st.term_cd =  'I' AND (tt3.tgt_term_cd = 'BEHAVIORAL HEALTH' OR (tt3.tgt_term_cd = 'INPATIENT ACUTE' AND  BehavRevLoc_cnt > 0 ) )	THEN 'Inpatient Behavioral Medicine' --term-40

                WHEN st.term_cd =  'I' AND (tt3.tgt_term_cd = 'INPATIENT REHAB') 																		THEN 'Inpatient Rehab' --term-44

                WHEN st.term_cd =  'I' AND (tt3.tgt_term_cd = 'SKILLED NURSING') 																		THEN 'Inpatient Skilled Nursing' --term-49

                WHEN st.term_cd =  'I' AND (tt3.tgt_term_cd = 'ACUTE HEAD PAIN') 																		THEN 'Inpatient Acute Head Pain' --Only for HQ, Meditech and Meditech Magic.

                WHEN st.term_cd =  'I' AND (tt3.tgt_term_cd IN ('NEWBORN', 'INPATIENT ACUTE' ) )														THEN 'Inpatient Acute' --term-51

                WHEN st.term_cd =  'I' AND (BehavCharge_cnt > 0) 																						THEN 'Inpatient Behavioral Medicine' --New logic added on 3/1/2019

                WHEN st.term_cd =  'I' AND (RehabCharge_cnt > 0) 																						THEN 'Inpatient Rehab' --New logic added on 3/1/2019

                WHEN st.term_cd =  'I' 																												THEN 'Inpatient Undefined' --term-54

                WHEN st.term_cd <> 'I' 																												THEN 'Outpatient Undefined' 			--term-55
            ELSE 'Outpatient Undefined'
            END v_grp_cd_all
            FROM D_ERM_IBV.ENCTR_HIST eh
            JOIN me_dt ON(me_dt.new_eff_from_dt BETWEEN eh.eff_from_dt AND eh.eff_thru_dt)
            LEFT JOIN D_SHR_IBV.term st ON (st.term_key =eH.ptient_clas_cd)
            LEFT JOIN CHRG_DTL ON (CHRG_DTL.enctr_id = eh.enctr_id AND eh.name_space_cd = CHRG_DTL.name_space_cd AND me_dt.new_eff_from_dt = CHRG_DTL.eff_from_dt )
            LEFT JOIN CHRG_DTL2 ON ( CHRG_DTL2.enctr_id = eh.enctr_id AND eh.name_space_cd = CHRG_DTL2.name_space_cd AND me_dt.new_eff_from_dt = CHRG_DTL2.eff_from_dt ) -- added 5/25/22
            LEFT JOIN DIAGS ON ( DIAGS.enctr_id = eh.enctr_id AND DIAGS.name_space_cd = eh.name_space_cd )  -- added 5/25/22
            LEFT JOIN D_ERM_IBV.ENCTR_AGG agg ON (eh.enctr_id = agg.enctr_id 	AND eh.name_space_cd = agg.name_space_cd AND me_dt.new_eff_from_dt BETWEEN agg.eff_from_dt AND agg.eff_thru_dt)
            LEFT JOIN D_IDW_IBV.ENCTR_ADMSN ed ON (ed.enctr_id = eh.enctr_id 	AND eh.name_space_cd = ed.name_space_cd)
                        	/* PATIENT TYPE TERM = EMERGENCY, SERIES */
            LEFT JOIN D_SHR_IBV.term_map_fltn tm3		ON ( eh.ptient_type_cd = tm3.src_term_key ) -- conformed
            LEFT JOIN D_SHR_IBV.term_map_grp_fltn tt3	ON ( tm3.tgt_term_key  = tt3.src_term_key	AND tt3.tgt_fmly_name = 'PatientTypeGroup'
            AND  me_dt.new_eff_from_dt BETWEEN tt3.eff_strt_dt AND tt3.eff_end_dt)
                        	/* MS DRG = 795 */
            LEFT JOIN D_SHR_IBV.term_map_fltn tm4		ON ( eh.drg_cd  		= tm4.src_term_key )  -- conformed
            LEFT JOIN D_SHR_IBV.term_map_grp_fltn tt4	ON ( tm4.tgt_term_key	= tt4.src_term_key	AND tt4.tgt_fmly_name = 'ServiceLineDRG'
            AND  me_dt.new_eff_from_dt BETWEEN tt4.eff_strt_dt AND tt4.eff_end_dt)
                        	/* Org Level 3 Code - pavilion for Healthquest name spaces */
            LEFT JOIN D_SHR_IBV.term_map_grp_fltn tt5	ON ( eh.ORG_LVL_3_CD  = tt5.src_term_key AND tt5.tgt_fmly_name = 'PatientTypeGroup'
            AND  me_dt.new_eff_from_dt BETWEEN tt5.eff_strt_dt AND tt5.eff_end_dt )
                            ------ new join for insurance covid start
                        	/* primary insurance code */
            LEFT JOIN D_SHR_IBV.term_map_grp_fltn tgpc	ON ( eh.prmry_insrnc_cd = tgpc.src_term_key AND tgpc.tgt_fmly_name = 'ServiceLineDRG'
            AND  me_dt.new_eff_from_dt BETWEEN tgpc.eff_strt_dt AND tgpc.eff_end_dt )
                        	/* secondary insurance code */
            LEFT JOIN D_SHR_IBV.term_map_grp_fltn tgsc	ON ( eh.scndry_insrnc_cd = tgsc.src_term_key AND tgsc.tgt_fmly_name = 'ServiceLineDRG'
            AND  me_dt.new_eff_from_dt BETWEEN tgsc.eff_strt_dt AND tgsc.eff_end_dt )
                        	/* third insurance code */
            LEFT JOIN D_SHR_IBV.term_map_grp_fltn tgtc	ON ( eh.third_insrnc_cd = tgtc.src_term_key AND tgtc.tgt_fmly_name = 'ServiceLineDRG'
            AND  me_dt.new_eff_from_dt BETWEEN tgtc.eff_strt_dt AND tgtc.eff_end_dt	)
                        	/* fourth insurance code */
            LEFT JOIN D_SHR_IBV.term_map_grp_fltn tgfc	ON ( eh.frth_insrnc_cd = tgfc.src_term_key AND tgfc.tgt_fmly_name = 'ServiceLineDRG'
            AND  me_dt.new_eff_from_dt BETWEEN tgfc.eff_strt_dt AND tgfc.eff_end_dt) ------ new join for insurance covid end

            WHERE eh.name_space_cd = :in_name_space_cd
                AND  NOT EXISTS (SELECT 1
                				FROM term1
                				WHERE term1.enctr_id = eh.enctr_id
                    			AND  term1.eff_from_dt = me_dt.new_eff_from_dt
                    			AND  term1.name_space_cd = eh.name_space_cd)
                				AND  ( EXISTS ( SELECT 1
                								FROM prcs_ctrl
                								WHERE prcs_ctrl.enctr_id = eh.enctr_id
                    							AND  prcs_ctrl.name_space_cd = eh.name_space_cd)
            							/*OR 'H' = :in_run_type*/)   --moved to PRCS_CTRL
            GROUP BY eh.enctr_id,
                eh.name_space_cd,
                me_dt.new_eff_from_dt,
                inptn_covid_flg,
                v_grp_cd_all),
        CHRG_DTL AS(
        SELECT
            dtl.enctr_id,
            dtl.name_space_cd,
            me_dt.new_eff_from_dt eff_from_dt,
             --	sum(dtl.chrg_amt) chrg_dtl_amt,
            --SUM(dtl.chrg_qty) chrg_qty_cnt,   -- removed 5/25/22
            SUM(
            CASE
                WHEN chrgCdTerm.tgt_term_cd	= 'SURGERY' 	AND chrgDeptTerm.tgt_term_cd = 'SURGERY' 	THEN 1 ELSE 0
            END) AS SurgeryCharge_cnt,
                SUM(
            CASE
                WHEN chrgCdTerm.tgt_term_cd 	IN('ER VISIT','EMERGENCY') 	OR chrgDeptTerm.tgt_term_cd = 'EMERGENCY' THEN 1 ELSE 0
            END) AS EmergencyCharge_cnt,
                SUM(
            CASE
                WHEN chrgDeptTerm.tgt_term_cd 	= 'INPATIENT REHAB' 						THEN 1 ELSE 0
            END) AS RehabCharge_cnt,
                 -- Only for HQ, Meditech and Meditech Magic.
            SUM(
            CASE
                WHEN chrgDeptTerm.tgt_term_cd 	= 'OUTPATIENT BEHAVIORAL MEDICINE' 			THEN 1 ELSE 0
            END) AS BehavCharge_cnt,
                 -- Only for HQ, Meditech and Meditech Magic.
            SUM(
            CASE
                WHEN revLocTerm.tgt_term_cd 	= 'BEHAVIORAL SERVICES - OTHER' 			THEN 1 ELSE 0
            END) AS BehavRevLoc_cnt,
                 -- Only for HQ, Meditech and Meditech Magic.
             --    sum(case when ( tg11.tgt_term_cd = 'COVID 19' or tg1.tgt_term_cd = 'COVID 19' OR chrgCdTerm.tgt_term_cd = 'COVID 19' ) then 1 else 0 end)  covid_cnt
            SUM(
            CASE
                WHEN ( tg11.tgt_term_cd = 'COVID 19') THEN 1 ELSE 0
            END ) covid_hcpcs_cnt,
-- removed 5/25/22
--                 -- jana changing all of them to COVID19 TEST
--            SUM(
--            CASE
--                WHEN ( tg1.tgt_term_cd  = 'COVID 19' ) THEN 1 ELSE 0
--            END ) covid_icd_cnt,
                SUM(
            CASE
                WHEN ( chrgCdTerm.tgt_term_cd = 'COVID 19' ) THEN 1 ELSE 0
            END ) covid_chrg_cnt,
-- removed 5/25/22
--                SUM(
--            CASE
--                WHEN ( x.diagn_cd IS NOT NULL   ) THEN 1 ELSE 0
--            END ) final_icd_cnt,
                 -- COVID 19 TEST --
            SUM(
            CASE
                WHEN ( tg11.tgt_term_cd = 'COVID 19 TEST' ) THEN 1 ELSE 0
            END ) covidtst_hcpcs_cnt
-- removed 5/25/22
--                SUM(
--            CASE
--                WHEN ( tg1.tgt_term_cd  = 'COVID 19 TEST' ) THEN 1 ELSE 0
--            END ) covidtst_icd_cnt
            FROM D_ERM_IBV.ENCTR_HIST eh
            JOIN me_dt ON (me_dt.new_eff_from_dt BETWEEN eh.eff_from_dt AND eh.eff_thru_dt)
-- removed 5/25/22
--            LEFT JOIN
--            (
--            SELECT aed.enctr_id,
--                aed.name_space_cd,
--                aed.diagn_cd,
--
--                CASE
--                    WHEN ed.dschrg_dt = DATE'1111-11-11' THEN CURRENT_DATE -1 ELSE ed.dschrg_dt
--                END DSCHRG_DT
--                FROM D_IDW_IBV.ENCTR_ADMSN ed
--                JOIN D_IDW_IBV.enctr_diagn aed ON (ed.enctr_id = aed.enctr_id AND aed.name_space_cd = ed.name_space_cd  AND ed.admit_dt >= DATE '2020-02-01')
--                WHERE ed.name_space_cd = :in_NAME_SPACE_CD
--                    AND  aed.DIAGN_SEQ_NUM > 0
--            ) x ON  (eh.enctr_id = x.enctr_id AND eh.name_space_cd=x.name_space_cd)
--                            /* COVID 19 diagnosis */
--            LEFT JOIN D_SHR_IBV.term_map_fltn td		ON ( x.diagn_cd = td.src_term_key )  -- conformed
--            LEFT JOIN D_SHR_IBV.term_map_grp_fltn tg1	ON ( td.tgt_term_key = tg1.src_term_key AND tg1.tgt_fmly_name = 'ServiceLineDRG'
--            AND  x.DSCHRG_DT BETWEEN tg1.eff_strt_dt AND tg1.eff_end_dt )

            JOIN D_ERM_IBV.ENCTR_CHRG_DTL dtl	ON ( dtl.enctr_id = eh.enctr_id AND eh.name_space_cd = dtl.name_space_cd AND post_dt <= me_dt.new_eff_from_dt)
                        	/* Charge Code */
            LEFT JOIN D_SHR_IBV.term_map_grp_fltn chrgCdTerm	ON ( dtl.item_chrg_cd = chrgCdTerm.src_term_key AND chrgCdTerm.tgt_fmly_name = 'ChargeCdGroup'
            AND  me_dt.new_eff_from_dt BETWEEN chrgCdTerm.eff_strt_dt AND chrgCdTerm.eff_end_dt )
                        	/* Charge Revenue Dept */
            LEFT JOIN D_SHR_IBV.term_map_grp_fltn chrgDeptTerm	ON ( dtl.RVNU_DEPT_CD = chrgDeptTerm.src_term_key AND chrgDeptTerm.tgt_fmly_name = 'ChargeDepartmentGroup'
            AND  me_dt.new_eff_from_dt BETWEEN chrgDeptTerm.eff_strt_dt AND chrgDeptTerm.eff_end_dt )
                        	/* Charge Revenue Location */
            LEFT JOIN D_SHR_IBV.term_map_grp_fltn revLocTerm	ON ( dtl.RVNU_LOC_CD = revLocTerm.src_term_key AND revLocTerm.tgt_fmly_name = 'ChargeDepartmentGroup'
            AND  me_dt.new_eff_from_dt BETWEEN revLocTerm.eff_strt_dt AND revLocTerm.eff_end_dt )
                        	/* COVID CPT */
            LEFT JOIN D_SHR_IBV.term_map_fltn td1		ON ( dtl.cpt_hcpc_std_pcdr_cd = td1.src_term_key )
            LEFT JOIN D_SHR_IBV.term_map_grp_fltn tg11	ON ( td1.tgt_term_key = tg11.src_term_key AND tg11.tgt_fmly_name = 'ServiceLineDRG'
            AND  me_dt.new_eff_from_dt BETWEEN tg11.eff_strt_dt AND tg11.eff_end_dt)
            WHERE eh.name_space_cd = :in_name_space_cd
              AND ( chrgCdTerm.tgt_term_cd  IN ('SURGERY','ER VISIT','EMERGENCY','COVID 19' )
                      OR
                    chrgDeptTerm.tgt_term_cd  IN ('SURGERY','EMERGENCY' ,'INPATIENT REHAB','OUTPATIENT BEHAVIORAL MEDICINE')
                      OR
                    revLocTerm.tgt_term_cd 	= 'BEHAVIORAL SERVICES - OTHER'
                      OR
                    tg11.tgt_term_cd  IN ('COVID 19','COVID 19 TEST')
                   )
                AND  ( EXISTS ( SELECT 1
                				FROM prcs_ctrl
                				WHERE prcs_ctrl.enctr_id = eh.enctr_id
                    			AND  prcs_ctrl.name_space_cd = eh.name_space_cd)
            		/*OR 'H' = :in_run_type*/)  -- moved to PRCS_CTRL
            GROUP BY dtl.enctr_id,
                dtl.name_space_cd,
                me_dt.new_eff_from_dt
        ),
-- added 5/25/22
        CHRG_DTL2 AS (
        	SELECT
            	dtl.enctr_id,
            	dtl.name_space_cd,
            	me_dt.new_eff_from_dt eff_from_dt,
            	SUM(dtl.chrg_qty) chrg_qty_cnt
            FROM D_ERM_IBV.ENCTR_HIST eh
            JOIN me_dt ON (me_dt.new_eff_from_dt BETWEEN eh.eff_from_dt AND eh.eff_thru_dt)
            JOIN D_ERM_IBV.ENCTR_CHRG_DTL dtl	ON ( dtl.enctr_id = eh.enctr_id AND eh.name_space_cd = dtl.name_space_cd AND post_dt <= me_dt.new_eff_from_dt)
            WHERE eh.name_space_cd = :in_name_space_cd
               AND  ( EXISTS ( SELECT 1
                				FROM prcs_ctrl
                				WHERE prcs_ctrl.enctr_id = eh.enctr_id
                    			AND  prcs_ctrl.name_space_cd = eh.name_space_cd)
            		/*OR 'H' = :in_run_type*/)
            GROUP BY dtl.enctr_id,
                dtl.name_space_cd,
                me_dt.new_eff_from_dt
        ),
-- added 5/25/22
        DIAGS as (  /* Need ALL diagnosis codes to determine the final_icd_cnt for non-covid diags */
            SELECT aed.enctr_id
                   ,aed.name_space_cd
                   ,CASE WHEN ed.dschrg_dt = DATE'1111-11-11' THEN CURRENT_DATE -1 ELSE ed.dschrg_dt END 	AS DISCHRG_DT
                   ,SUM (CASE WHEN ( tg1.tgt_term_cd  = 'COVID 19' ) THEN 1 ELSE 0 END ) 					AS covid_icd_cnt
                   --,SUM (CASE WHEN ( tg1.tgt_term_cd  = 'COVID 19 TEST' ) THEN 1 ELSE 0 END ) 	AS covidtst_icd_cnt  -- NOT USED ANYMORE
                   ,SUM (CASE WHEN ( aed.diagn_cd IS NOT NULL and aed.diagn_type_cd NOT LIKE 'W%' ) THEN 1 ELSE 0 END )		AS final_icd_cnt
              FROM D_IDW_IBV.ENCTR_ADMSN ed
              JOIN D_IDW_IBV.enctr_diagn aed ON (ed.enctr_id = aed.enctr_id AND aed.name_space_cd = ed.name_space_cd  AND ed.admit_dt >= DATE '2020-02-01' and aed.DIAGN_SEQ_NUM > 0 )
              LEFT JOIN D_SHR_IBV.term_map_fltn td		ON ( aed.diagn_cd = td.src_term_key )  -- conformed
              LEFT JOIN D_SHR_IBV.term_map_grp_fltn tg1	ON ( td.tgt_term_key = tg1.src_term_key AND tg1.tgt_fmly_name = 'ServiceLineDRG'
              											AND  tg1.tgt_term_cd like 'COVID%'
            											AND  DISCHRG_DT BETWEEN tg1.eff_strt_dt AND tg1.eff_end_dt )
              WHERE ed.name_space_cd = :in_NAME_SPACE_CD
               AND  ( EXISTS ( SELECT 1
                				FROM prcs_ctrl
                				WHERE prcs_ctrl.enctr_id = ed.enctr_id
                    				AND  prcs_ctrl.name_space_cd = ed.name_space_cd)
                    /*OR 'H' = :in_run_type*/ )
            GROUP BY aed.enctr_id
                   ,aed.name_space_cd
                   ,dschrg_dt
         ),
                	/***************************** TERM 1 *******************************/
        TERM1 AS
        (
        SELECT eh.enctr_id,
            eh.name_space_cd,
            me_dt.new_eff_from_dt eff_from_dt,
            COUNT(*) term1_cnt,
            'Exclude From Reports' v_grp_cd_1
            FROM D_ERM_IBV.ENCTR_HIST eh
            JOIN me_dt ON (me_dt.new_eff_from_dt BETWEEN eh.eff_from_dt AND eh.eff_thru_dt)
            LEFT JOIN D_ERM_IBV.ENCTR_AGG agg 		ON (eh.enctr_id = agg.enctr_id AND eh.name_space_cd = agg.name_space_cd AND  me_dt.new_eff_from_dt BETWEEN agg.eff_from_dt AND agg.eff_thru_dt
            AND (COALESCE(agg.TOT_AR_BAL,0) + COALESCE(AGG.TOT_OFC_BAL,0)) = 0 )   		--Total Account Balance = 0
            LEFT JOIN (
            SELECT *
                FROM D_IDW_IBV.ENCTR QUALIFY ROW_NUMBER() OVER ( PARTITION BY src_admn_enctr_sk, src_admn_name_space_cd
                ORDER BY load_mod_dt_tm DESC,
                    load_add_dt_tm DESC )=1 ) e
            ON ( e.enctr_id = eh.enctr_id  AND eh.name_space_cd = e.src_admn_name_space_cd )
            LEFT JOIN D_IDW_IBV.ENCTR_ADMSN ed 	ON (ed.enctr_id = eh.enctr_id AND eh.name_space_cd = ed.name_space_cd)
            --LEFT JOIN D_IDW_IBV.ENCTR_PRVDR p 		ON p.enctr_id = eh.enctr_id   AND p.name_space_cd = eh.name_space_cd	-- removed 5/25/22 -- not needed
            --LEFT JOIN D_IDW_IBV.PRTY b ON b.PRTY_ID = p.PRVDR_INDIV_PRTY_ID													-- removed 5/25/22 -- not needed
            LEFT JOIN D_IDW_IBV.PRTY_INDIV_NAME PIN ON (PIN.INDIV_PRTY_ID = e.PTIENT_MBR_PRTY_ID AND NAME_TYPE_CD='GVN_NM') 	-- this will dup >1 per enctr
                        	/* Patient Type */
            LEFT JOIN D_SHR_IBV.term_map_fltn tm3		ON ( eh.ptient_type_cd 	= tm3.src_term_key )  -- conformed
            LEFT JOIN D_SHR_IBV.term_map_grp_fltn tt3	ON ( tm3.tgt_term_key 	= tt3.src_term_key AND tt3.tgt_fmly_name = 'PatientTypeGroup'
            AND  me_dt.new_eff_from_dt BETWEEN tt3.eff_strt_dt AND tt3.eff_end_dt)
            WHERE eh.name_space_cd = :in_name_space_cd
                AND  ((ed.admit_dt_tm IS NULL AND ed.dschrg_dt_tm IS NULL)
            OR pin.fmly_name IN ('Test Patient','TEST','Zztest','TESTPRODUCTION','Zztower') --- need this one for EPIC
            OR pin.fmly_name||pin.gvn_name LIKE '%HNAM%TEST%'  -- need this one for RSW.
            OR eh.rec_auth  = 69  --Our Lady of Peace (IN212) is REC_AUTH=69
            OR tt3.tgt_term_cd = 'EXCLUDE FROM REPORTS'
            OR ed.actv_ind='N'   -- Epic TC sets the indicator based on PATIENT_3.IS_TEST_PAT_YN
                        ----	 	or tt5.term_cd = 'EXCLUDE FROM REPORTS'
            OR (eh.EXTR_AR_FLG='Y' AND eh.name_space_cd NOT IN ('EPIC-CHICAGO','EPIC-CHICAGO-PB'))
            )
                AND  (EXISTS ( SELECT 1
                			   FROM prcs_ctrl
                	 		   WHERE prcs_ctrl.enctr_id = eh.enctr_id
                               AND  prcs_ctrl.name_space_cd = eh.name_space_cd)
                      /*OR 'H' = :in_run_type*/)  -- moved to PRCS_CTRL
            GROUP BY eh.enctr_id,
                eh.name_space_cd,
                me_dt.new_eff_from_dt),
                	/***************************** TERM 2 *******************************/
        TERM2 AS  -- LEGACY CONVERSION LOGIC
        (
        SELECT eh.enctr_id,
            eh.name_space_cd,
            me_dt.new_eff_from_dt eff_from_dt,
            COUNT(*) term2_cnt,
            'LEGACY CONVERSION' v_grp_cd_2
            FROM D_ERM_IBV.ENCTR_HIST eh
            JOIN me_dt ON (me_dt.new_eff_from_dt BETWEEN eh.eff_from_dt AND eh.eff_thru_dt)
            LEFT JOIN D_IDW_IBV.ENCTR_ADMSN ed 	ON (ed.enctr_id = eh.enctr_id AND eh.name_space_cd = ed.name_space_cd)
            LEFT JOIN D_ERM_IBV.enctr_tsactn_dtl td ON (eh.name_space_cd=td.name_space_cd AND eh.enctr_id=td.enctr_id)
            LEFT JOIN D_SHR_IBV.term_map_grp grp 	ON (td.item_tsactn_cd = grp.src_term_key )
            WHERE eh.name_space_cd = :in_NAME_SPACE_CD --AND st3.term_cd = 'I'  -- 2/6/2020 commented
                 --and loc.TGT_TERM_KEY='30|NRC|UB04-DischargeLocation' -- 2/6/2020 commented
                 --and -- 2/6/2020 commented

                AND  grp.tgt_term_key ='LEGACY CONVERSION|GRP|SubCategory'
                AND  (EXISTS ( SELECT 1
                			  	FROM prcs_ctrl
                				WHERE prcs_ctrl.enctr_id = eh.enctr_id
                    			AND  prcs_ctrl.name_space_cd = eh.name_space_cd)
            		  /* OR 'H' = :in_run_type*/ ) -- moved to PRCS_CTRL
            GROUP BY eh.enctr_id,
                eh.name_space_cd,
                me_dt.new_eff_from_dt),
        prcs_ctrl AS (
        SELECT prcs_ctrl.enctr_id,
            prcs_ctrl.name_space_cd
            FROM D_ERM_IBV.enctr_prcs_cntrl prcs_ctrl
            WHERE prcs_ctrl.NAME_SPACE_CD = :in_NAME_SPACE_CD
                AND (  (prcs_ctrl.std_grpg_rsult_dt IS NULL OR prcs_ctrl.std_grpg_rsult_dt < prcs_ctrl.std_grpg_extc_dt)
                   OR  (:in_run_type in ('H','S') AND coalesce(prcs_ctrl.std_grpg_rsult_dt, date'2041-01-01') >= :l_start_dt)  )  -- new History and Start Date logic
                	),
        me_dt AS (
        SELECT  calendar_date new_eff_from_dt
            FROM D_SHR_ACCV.PERIOD_CALENDAR x
            WHERE ( x.calendar_date = last_day(x.calendar_date) OR x.calendar_date = CURRENT_DATE -1 )
                AND  (
            ('H' = :in_run_type AND x.calendar_date BETWEEN /*l_hist_run_dt*/ :l_start_dt AND CURRENT_DATE -1 )
            OR (:in_run_type IN ('I','S') AND x.calendar_date <= CURRENT_DATE AND x.calendar_date  >= :l_start_dt )
            )
        )
        SELECT ENCTR_ID,
            eff_from_dt,
            REC_AUTH,
            NAME_SPACE_CD,SURG_FLG, ER_FLG,
            :l_job_id AS JOB_ID,
            CURRENT_DATE AS LOAD_ADD_DT_TM,
            CURRENT_DATE AS LOAD_MOD_DT_TM,
            '2041-01-01' EFF_THRU_DT,
            COALESCE(v_grp_cd, 'Undefined Main') STD_PTIENT_CLAS,
            COALESCE(inptn_covid_flg,'N') INPTN_COVID_FLG
            FROM MAIN
            WHERE ENCTR_ID > 0
            GROUP BY ENCTR_ID,
                eff_from_dt,
                REC_AUTH,
                NAME_SPACE_CD,SURG_FLG, ER_FLG,
                JOB_ID,
                LOAD_ADD_DT_TM,
                LOAD_MOD_DT_TM,
                EFF_THRU_DT,
                STD_PTIENT_CLAS,
                COALESCE(inptn_covid_flg,'N')
                ;

        SET l_activity_count = l_activity_count+activity_count;

                	-- job detail end
        CALL D_ERM_MAC.P_ERM_JOB_HISTORY_DTL(:l_JOB_ID, :l_JOB_DTL_ID, l_activity_count,
        'End of Insert into  std_grp_volatile for Patient Classification  in_run_type: '||:in_run_type||' ;name_space_cd:'||:in_name_space_cd||' ;l_start_dt'||
        CASE
            WHEN :l_start_dt IS NULL THEN ' NO DATE ' ELSE CAST((:l_start_dt (FORMAT 'yyyy-mm-dd')) AS VARCHAR(10) )
        END, l_JOB_DTL_ID);

                	/*
                	 * Collect statistics for std_grp_volatile table.
                	 */
        COLLECT STATISTICS COLUMN (PARTITION), COLUMN (ENCTR_ID), COLUMN (REC_AUTH), COLUMN (name_space_cd), COLUMN (ENCTR_ID ,EFF_FROM_DT,NAME_SPACE_CD) ON std_grp_volatile;

                    --final Job History
        CALL D_ERM_MAC.P_ERM_JOB_HISTORY(:l_JOB_ID, :l_PRCS_NAME, :l_BUS_UNIT, :l_SCRIPT_NAME, 'C', l_activity_count, 0, 0,:l_RUN_ERROR_CD, :l_RUN_ERROR_MSG,  :l_JOB_ID);
        SET out_return_msg =  'Ended :in_job_id' ; --RETURN JOB_ID
         /*HARTFORD failed on 11/13/2109 with SPOOL ERROR, please see below for the possible STATS that needs to be collected.
                 *
                 * 	COLLECT STATISTICS COLUMN (ENCTR_ID ,EFF_FROM_DT,NAME_SPACE_CD) ON std_grp_volatile ; -- should be used in PAT_CLASS as SRVC_LVL# is taking long time.
                	COLLECT STATISTICS COLUMN (cdate ,TD_SYSFNLIB.last_day (cdate )) AS ST_131114262468_0_CALDATES ON SYS_CALENDAR.CALDATES ;
                 * */
    END;
